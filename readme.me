# Crear un bucket en Amazon S3 para almacenar el estado de Terraform.
# Este comando crea un bucket llamado "terraform-backend-orbidi" en la región "us-east-1".
# El bucket es donde Terraform almacenará su archivo de estado remoto (terraform.tfstate).
aws s3api create-bucket \
    --bucket terraform-backend-orbidi \  # Nombre único del bucket en AWS S3.
    --region us-east-1                   # Región donde se creará el bucket.

# Nota:
# Si estás creando un bucket en regiones distintas a "us-east-1", necesitas especificar
# la configuración de ubicación utilizando `--create-bucket-configuration`.
# Ejemplo:
# --create-bucket-configuration LocationConstraint=us-west-2

# Crear una tabla en DynamoDB para bloqueo de estado de Terraform.
# Terraform utiliza esta tabla para asegurar que solo una operación a la vez
# pueda modificar el estado. Esto evita conflictos durante ejecuciones simultáneas.

aws dynamodb create-table \
    --table-name terraform-lock-table \                      # Nombre de la tabla DynamoDB.
    --attribute-definitions AttributeName=LockID,AttributeType=S \  # Define un atributo "LockID" de tipo cadena (S).
    --key-schema AttributeName=LockID,KeyType=HASH \          # Define "LockID" como la clave principal HASH.
    --billing-mode PAY_PER_REQUEST                           # Habilita la facturación según uso para evitar costos innecesarios.

____________________________


Repositorio de terraform

repositorios de applicaciones


   --------------------- 

Autentica tu Docker CLI con ECR usando AWS CLI:
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 123456789012.dkr.ecr.us-east-1.amazonaws.com
docker build -t fastapi-app:latest .
docker push 381492063986.dkr.ecr.us-east-1.amazonaws.com/fastapi-app:latest
docker pull 381492063986.dkr.ecr.us-east-1.amazonaws.com/fastapi-app:latest
docker run -p 8000:80 fastapi-app:latest

---------------

aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 381492063986.dkr.ecr.us-east-1.amazonaws.com
docker build -t django-app:latest .
docker tag django-app:latest 381492063986.dkr.ecr.us-east-1.amazonaws.com/django-app:latest
docker push 381492063986.dkr.ecr.us-east-1.amazonaws.com/django-app:latest
docker pull 381492063986.dkr.ecr.us-east-1.amazonaws.com/django-app:latest
docker run -p 8080:8000 381492063986.dkr.ecr.us-east-1.amazonaws.com/django-app:latest
-------------------



